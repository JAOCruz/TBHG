{
  "version": 3,
  "sources": ["../../phaser3-rex-plugins/plugins/utils/system/IsGame.js", "../../phaser3-rex-plugins/plugins/utils/system/IsSceneObject.js", "../../phaser3-rex-plugins/plugins/utils/system/GetGame.js", "../../phaser3-rex-plugins/plugins/utils/renderer/postfxpipeline/RegisterPostPipeline.js", "../../phaser3-rex-plugins/plugins/utils/renderer/postfxpipeline/AddPostFxPipelineInstance.js", "../../phaser3-rex-plugins/plugins/utils/renderer/postfxpipeline/RemovePostFxPipelineInstance.js", "../../phaser3-rex-plugins/plugins/utils/renderer/postfxpipeline/GetPostFxPipelineInstance.js", "../../phaser3-rex-plugins/plugins/utils/renderer/postfxpipeline/BasePostFxPipelinePlugin.js", "../../phaser3-rex-plugins/plugins/utils/object/SetValue.js"],
  "sourcesContent": ["const GameClass = Phaser.Game;\r\nvar IsGame = function (object) {\r\n    return (object instanceof GameClass);\r\n}\r\nexport default IsGame;", "const SceneClass = Phaser.Scene;\r\nvar IsSceneObject = function (object) {\r\n    return (object instanceof SceneClass);\r\n}\r\nexport default IsSceneObject;", "import IsGame from './IsGame.js';\r\nimport IsSceneObject from './IsSceneObject.js';\r\n\r\nvar GetGame = function (object) {\r\n    if ((object == null) || (typeof (object) !== 'object')) {\r\n        return null;\r\n    } else if (IsGame(object)) {\r\n        return object;\r\n    } else if (IsGame(object.game)) {\r\n        return object.game;\r\n    } else if (IsSceneObject(object)) { // object = scene object\r\n        return object.sys.game;\r\n    } else if (IsSceneObject(object.scene)) { // object = game object\r\n        return object.scene.sys.game;\r\n    }\r\n}\r\n\r\nexport default GetGame;", "import GetGame from '../../system/GetGame.js';\r\n\r\nvar RegisterPostPipeline = function (game, postFxPipelineName, PostFxPipelineClass) {\r\n    GetGame(game).renderer.pipelines.addPostPipeline(postFxPipelineName, PostFxPipelineClass);\r\n}\r\n\r\nexport default RegisterPostPipeline;", "var AddPostFxPipelineInstance = function (gameObject, PostFxPipelineClass, config) {\r\n    if (config === undefined) {\r\n        config = {};\r\n    }\r\n\r\n    gameObject.setPostPipeline(PostFxPipelineClass);\r\n    var pipeline = gameObject.postPipelines[gameObject.postPipelines.length - 1];\r\n    pipeline.resetFromJSON(config);\r\n\r\n    if (config.name) {\r\n        pipeline.name = config.name;\r\n    }\r\n\r\n    return pipeline;\r\n}\r\n\r\nexport default AddPostFxPipelineInstance;", "const SpliceOne = Phaser.Utils.Array.SpliceOne;\r\n\r\nvar RemovePostFxPipelineInstance = function (gameObject, PostFxPipelineClass, name) {\r\n    if (name === undefined) {\r\n        var pipelines = gameObject.postPipelines;\r\n        for (var i = (pipelines.length - 1); i >= 0; i--) {\r\n            var instance = pipelines[i];\r\n            if (instance instanceof PostFxPipelineClass) {\r\n                instance.destroy();\r\n                SpliceOne(pipelines, i);\r\n            }\r\n        }\r\n    } else {\r\n        var pipelines = gameObject.postPipelines;\r\n        for (var i = 0, cnt = pipelines.length; i < cnt; i++) {\r\n            var instance = pipelines[i];\r\n            if ((instance instanceof PostFxPipelineClass) && (instance.name === name)) {\r\n                instance.destroy();\r\n                SpliceOne(pipelines, i);\r\n            }\r\n        }\r\n    }\r\n\r\n    gameObject.hasPostPipeline = (gameObject.postPipelines.length > 0);\r\n\r\n}\r\n\r\nexport default RemovePostFxPipelineInstance;", "var GetPostFxPipelineInstance = function (gameObject, PostFxPipelineClass, name) {    \r\n    if (name === undefined) {\r\n        var result = [];\r\n        var pipelines = gameObject.postPipelines;\r\n        for (var i = 0, cnt = pipelines.length; i < cnt; i++) {\r\n            var instance = pipelines[i];\r\n            if (instance instanceof PostFxPipelineClass) {\r\n                result.push(instance)\r\n            }\r\n        }\r\n        return result;\r\n    } else {\r\n        var pipelines = gameObject.postPipelines;\r\n        for (var i = 0, cnt = pipelines.length; i < cnt; i++) {\r\n            var instance = pipelines[i];\r\n            if ((instance instanceof PostFxPipelineClass) && (instance.name === name)) {\r\n                return instance;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default GetPostFxPipelineInstance;", "import RegisterPostPipeline from './RegisterPostPipeline.js';\r\nimport AddPostFxPipelineInstance from './AddPostFxPipelineInstance.js';\r\nimport RemovePostFxPipelineInstance from './RemovePostFxPipelineInstance.js';\r\nimport GetPostFxPipelineInstance from './GetPostFxPipelineInstance.js'\r\n\r\nclass BasePostFxPipelinePlugin extends Phaser.Plugins.BasePlugin {\r\n    setPostPipelineClass(PostFxPipelineClass, postFxPipelineName) {\r\n        this.PostFxPipelineClass = PostFxPipelineClass;\r\n        this.postFxPipelineName = postFxPipelineName;\r\n        return this;\r\n    }\r\n\r\n    start() {\r\n        var eventEmitter = this.game.events;\r\n        eventEmitter.once('destroy', this.destroy, this);\r\n\r\n        RegisterPostPipeline(this.game, this.postFxPipelineName, this.PostFxPipelineClass);\r\n    }\r\n\r\n    add(gameObject, config) {\r\n        return AddPostFxPipelineInstance(gameObject, this.PostFxPipelineClass, config);\r\n    }\r\n\r\n    remove(gameObject, name) {\r\n        RemovePostFxPipelineInstance(gameObject, this.PostFxPipelineClass, name);\r\n        return this;\r\n    }\r\n\r\n    get(gameObject, name) {\r\n        return GetPostFxPipelineInstance(gameObject, this.PostFxPipelineClass, name);\r\n    }\r\n}\r\n\r\nexport default BasePostFxPipelinePlugin;", "var IsInValidKey = function (keys) {\r\n    return (keys == null) || (keys === '') || (keys.length === 0);\r\n};\r\n\r\nvar GetEntry = function (target, keys, defaultEntry) {\r\n    var entry = target;\r\n    if (IsInValidKey(keys)) {\r\n        //entry = root;\r\n    } else {\r\n        if (typeof (keys) === 'string') {\r\n            keys = keys.split('.');\r\n        }\r\n\r\n        var key;\r\n        for (var i = 0, cnt = keys.length; i < cnt; i++) {\r\n            key = keys[i];\r\n            if ((entry[key] == null) || (typeof (entry[key]) !== 'object')) {\r\n                var newEntry;\r\n                if (i === cnt - 1) {\r\n                    if (defaultEntry === undefined) {\r\n                        newEntry = {};\r\n                    } else {\r\n                        newEntry = defaultEntry;\r\n                    }\r\n                } else {\r\n                    newEntry = {};\r\n                }\r\n\r\n                entry[key] = newEntry;\r\n            }\r\n\r\n            entry = entry[key];\r\n        }\r\n    }\r\n\r\n    return entry;\r\n};\r\n\r\nvar SetValue = function (target, keys, value, delimiter) {\r\n    if (delimiter === undefined) {\r\n        delimiter = '.';\r\n    }\r\n\r\n    // no object\r\n    if (typeof (target) !== 'object') {\r\n        return;\r\n    }\r\n\r\n    // invalid key\r\n    else if (IsInValidKey(keys)) {\r\n        // don't erase target\r\n        if (value == null) {\r\n            return;\r\n        }\r\n        // set target to another object\r\n        else if (typeof (value) === 'object') {\r\n            target = value;\r\n        }\r\n    } else {\r\n        if (typeof (keys) === 'string') {\r\n            keys = keys.split(delimiter);\r\n        }\r\n\r\n        var lastKey = keys.pop();\r\n        var entry = GetEntry(target, keys);\r\n        entry[lastKey] = value;\r\n    }\r\n\r\n    return target;\r\n};\r\n\r\nexport default SetValue;"],
  "mappings": "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",
  "names": []
}
